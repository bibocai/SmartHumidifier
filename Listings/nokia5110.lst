C51 COMPILER V9.55   NOKIA5110                                                             05/27/2016 11:35:25 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE NOKIA5110
OBJECT MODULE PLACED IN .\Objects\nokia5110.obj
COMPILER INVOKED BY: E:\Keil_v5\C51\BIN\C51.EXE src\nokia5110.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\inc) DEBUG OBJEC
                    -TEXTEND PRINT(.\Listings\nokia5110.lst) TABS(2) OBJECT(.\Objects\nokia5110.obj)

line level    source

   1          #include "nokia5110.h"
   2          
   3          
   4          uchar index[10]={0,1,2,3,4,5,6,7,8,9};
   5          uchar str[10];
   6          const char code characters[]={
   7              0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E ,/*"0",0*/
   8              0x00, 0x00, 0x42, 0x7F, 0x40, 0x00 ,/*"1",1*/
   9              0x00, 0x42, 0x61, 0x51, 0x49, 0x46 ,/*"2",2*/
  10              0x00, 0x21, 0x41, 0x45, 0x4B, 0x31 ,/*"3",3*/
  11              0x00, 0x18, 0x14, 0x12, 0x7F, 0x10 ,/*"4",4*/
  12              0x00, 0x27, 0x45, 0x45, 0x45, 0x39 ,/*"5",5*/
  13              0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30 ,/*"6",6*/
  14              0x00, 0x01, 0x71, 0x09, 0x05, 0x03 ,/*"7",7*/
  15              0x00, 0x36, 0x49, 0x49, 0x49, 0x36 ,/*"8",8*/
  16              0x00, 0x06, 0x49, 0x49, 0x29, 0x1E ,/*"9",9*/
  17              0x00, 0x00, 0x60, 0x60, 0x00, 0x00 ,/*".",10*/
  18              0x00, 0x08, 0x08, 0x08, 0x08, 0x08 ,/*"-",11*/
  19              0xff, 0xff, 0xff, 0xff, 0xff, 0xff };/*12*/
  20          
  21              
  22          const char code characters16_16[]= 
  23          {
  24          0x04,0x84,0xE4,0x5C,0x44,0xC4,0x20,0x10,0xE8,0x27,0x24,0xE4,0x34,0x2C,0xE0,0x00,
  25          0x02,0x01,0x7F,0x10,0x10,0x3F,0x80,0x60,0x1F,0x09,0x09,0x3F,0x49,0x89,0x7F,0x00,/*"确",0*/
  26          0x10,0x0C,0x44,0x44,0x44,0x44,0x45,0xC6,0x44,0x44,0x44,0x44,0x44,0x14,0x0C,0x00,
  27          0x80,0x40,0x20,0x1E,0x20,0x40,0x40,0x7F,0x44,0x44,0x44,0x44,0x44,0x40,0x40,0x00,/*"定",1*/
  28          0x04,0x04,0x44,0xC4,0x4F,0x44,0x44,0xC4,0x24,0x24,0x2F,0xB4,0x24,0x04,0x04,0x00,
  29          0x40,0x44,0x24,0x24,0x15,0x0C,0x04,0xFE,0x04,0x0C,0x15,0x24,0x24,0x44,0x40,0x00,/*"菜",2*/
  30          0x00,0x00,0xF8,0x49,0x4A,0x4C,0x48,0xF8,0x48,0x4C,0x4A,0x49,0xF8,0x00,0x00,0x00,
  31          0x10,0x10,0x13,0x12,0x12,0x12,0x12,0xFF,0x12,0x12,0x12,0x12,0x13,0x10,0x10,0x00,/*"单",3*/
  32          0x40,0x40,0x42,0xCC,0x00,0x40,0x40,0x40,0x40,0xFF,0x40,0x40,0x40,0x40,0x40,0x00,
  33          0x00,0x00,0x00,0x7F,0x20,0x10,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,/*"计",4*/
  34          0x40,0x40,0x40,0x7C,0x40,0x40,0x40,0xFF,0x44,0x44,0x44,0x44,0x44,0x40,0x40,0x00,
  35          0x80,0x90,0x88,0x46,0x40,0x40,0x20,0x2F,0x10,0x10,0x08,0x04,0x02,0x00,0x00,0x00,/*"步",5*/
  36          0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x40,0x40,0x40,0x40,0x40,0x40,0x00,0x00,0x00,
  37          0x40,0x40,0x40,0x40,0x40,0x40,0x7F,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x00,/*"上",6*/
  38          0x00,0x80,0x60,0xF8,0x07,0x40,0x48,0x48,0xE8,0x5F,0x48,0x48,0x48,0x40,0x40,0x00,
  39          0x01,0x00,0x00,0xFF,0x00,0x00,0x02,0x0B,0x12,0x22,0xD2,0x0A,0x06,0x00,0x00,0x00,/*"传",7*/
  40          0x10,0x60,0x02,0x8C,0x00,0x44,0x54,0x54,0x54,0x7F,0x54,0x54,0x54,0x44,0x40,0x00,
  41          0x04,0x04,0x7E,0x01,0x00,0x00,0xFF,0x15,0x15,0x15,0x55,0x95,0x7F,0x00,0x00,0x00,/*"清",8*/
  42          0x10,0x0C,0x05,0x55,0x55,0x55,0x85,0x7F,0x85,0x55,0x55,0x55,0x05,0x14,0x0C,0x00,
  43          0x04,0x04,0x02,0x0A,0x09,0x29,0x2A,0x4C,0x48,0xA9,0x19,0x02,0x02,0x04,0x04,0x00};/*"零",9*/
  44          
  45          void lcdDC(uchar dt,uchar command)
  46          {
  47   1        uchar i = 0;
  48   1        CE = 0;
  49   1        if(command == 0)
  50   1          DC = 0;
  51   1        else DC = 1;
  52   1        for(i;i<8;i++)
  53   1        {
  54   2          if(dt & 0x80)
C51 COMPILER V9.55   NOKIA5110                                                             05/27/2016 11:35:25 PAGE 2   

  55   2            DIN = 1;
  56   2          else
  57   2            DIN = 0;
  58   2          CLK = 0;
  59   2          dt = dt << 1;
  60   2          CLK = 1;
  61   2        }
  62   1        CE = 1;
  63   1      }
  64          void lcdClear(void)
  65          {
  66   1        uchar t = 0,k = 0;
  67   1        lcdDC(0x0C,0);
  68   1        lcdDC(0x80,0);
  69   1        for(t = 0;t < 6;t ++)
  70   1        {
  71   2          for(k = 0;k < 84;k ++)
  72   2          {
  73   3            lcdDC(0x00,1);
  74   3          }
  75   2        }
  76   1      }
  77          void Init5110(void)
  78          {
  79   1        RST = 0;
  80   1        delay_ms(1);
  81   1        RST = 1;
  82   1        CE = 0;
  83   1        delay_ms(1);
  84   1        CE = 1;
  85   1        delay_ms(1);
  86   1        lcdDC(0x21,0);  
  87   1        lcdDC(0xB8,0);      
  88   1        lcdDC(0x06,0);  
  89   1        lcdDC(0x13,0);;
  90   1        lcdDC(0x20,0);
  91   1        lcdClear();
  92   1        lcdDC(0x0C,0);
  93   1        CE = 0;
  94   1        delay_ms(200);
  95   1      }
  96          void lcdSetXY(uchar X,uchar Y)
  97          {
  98   1        lcdDC(0x40 | Y,0);
  99   1        lcdDC(0x80 | X,0);
 100   1      }
 101          void lcdWriteChar6_8(uchar row,uchar page,uchar character)   //row : 0~13  page :0~5 
 102          {
 103   1        uchar i = 0;
 104   1        lcdSetXY(row * 6,page);
 105   1        for(i = 0;i < 6; i ++)
 106   1        {
 107   2          lcdDC(characters[character * 6 + i],1);
 108   2        }
 109   1      }
 110          
 111          //write a character(6*8),don't need coordinates  
 112          void lcdWriteChar(uchar value)  
 113          {  
 114   1          uchar i;  
 115   1          for(i = 0;i < 6;i ++)  
 116   1            lcdDC(ASCII_6_8[value - 0x20][i],1);  
C51 COMPILER V9.55   NOKIA5110                                                             05/27/2016 11:35:25 PAGE 3   

 117   1      }  
 118          //write a char(6*8),need coordinates  
 119          void lcdPutChar(uchar value,uchar x,uchar y)  
 120          {  
 121   1          if(x > 13) x = 0;  
 122   1          lcdSetXY(6 * x,y);  
 123   1          lcdWriteChar(value);  
 124   1      }  
 125          //write a string(6*8),don't need coordinates  
 126          void lcdWriteStr(uchar * str)  
 127          {  
 128   1          while(*str)  
 129   1          {  
 130   2              lcdWriteChar(*str ++);  
 131   2          }  
 132   1      }  
 133          //write a string(6*8),need coordinates,auto line breaks  
 134          void lcdPutStr(uchar * str,uchar x,uchar y)  
 135          {  
 136   1          if(x > 13) x = 0;  
 137   1          lcdSetXY(6 * x,y);  
 138   1          lcdWriteStr(str);  
 139   1      }  
 140          
 141          void lcdWriteChar16_16(uchar row,uchar page,uchar character)   //row : 0~13  page :0~5 
 142          {
 143   1        uchar i = 0;
 144   1        lcdSetXY(row * 16,page);
 145   1        for(i = 0;i < 16; i ++)
 146   1          lcdDC(characters16_16[character * 32 + i], 1);
 147   1        lcdSetXY(row * 16,page + 1);
 148   1        for(i = 16;i < 32; i ++)
 149   1          lcdDC(characters16_16[character * 32 + i], 1);
 150   1      }
 151          void lcdClearAny(uchar page,uchar Row_S,uchar Row_E)
 152          {
 153   1        uchar i;
 154   1        lcdSetXY(6*Row_S,page);
 155   1        for(i=0;i<6*(Row_E-Row_S);i++)
 156   1          lcdDC(0x00,1);
 157   1      }
 158          void lcdShowDouble(uchar page,uchar row,double y,uchar n) //n为显示小数的位数
 159          {
 160   1          uint a[10],b,multi;
 161   1        uchar i=0,j,f,flag=0,sign=0;
 162   1        double x=y;
 163   1        unsigned long int w;
 164   1        if(x<0) {x=-x,sign=0;}
 165   1        else sign=1;
 166   1        switch(n)
 167   1        {case 0:multi=1;break;
 168   2        case 1:multi=10;break;
 169   2        case 2:multi=100;break;
 170   2        case 3:multi=1000;break;}
 171   1        w=(unsigned long int)(x*multi);
 172   1        while(1)
 173   1        {
 174   2          b=w/10;
 175   2          i++;
 176   2          if(b==0)break;
 177   2          w=w/10;
 178   2        }
C51 COMPILER V9.55   NOKIA5110                                                             05/27/2016 11:35:25 PAGE 4   

 179   1        w=(long int)(x*multi);
 180   1        if(w<1000&&n!=0) i=4;
 181   1        j=i;
 182   1        while(i)
 183   1        {
 184   2          a[i-1]=w%10;
 185   2          w=w/10;
 186   2          i--;
 187   2        }
 188   1        w=(long int)(x*multi);
 189   1        if(sign==0)lcdWriteChar6_8(row-1,page,11);
 190   1      if(w!=0)
 191   1        while(i!=j)
 192   1        {
 193   2          if(flag==0)f=0;else f=1;
 194   2          lcdWriteChar6_8(row+i+f,page,a[i]);
 195   2          i++;
 196   2          if(n!=0)
 197   2          {if(i==j-n){flag=1;lcdWriteChar6_8(row+i,page,10);}}
 198   2        }
 199   1      else {lcdClearAny(page,row,row+i);lcdWriteChar6_8(row+i,page,0);}
 200   1      }
 201          
 202          
 203          //write a Chinese character(16*16)  
 204          void lcdWriteChinese(uchar Hanzi[],uchar x,uchar y)  
 205          {  
 206   1          uchar i;  
 207   1          //write the first row  
 208   1          lcdSetXY(x,y * 2);  
 209   1          for(i = 0;i < 16;i ++)  
 210   1          lcdDC(Hanzi[i],1);  
 211   1          //write the second row  
 212   1          lcdSetXY(x,2 * y + 1);  
 213   1          for(i = 16;i < 32;i ++)  
 214   1              lcdDC(Hanzi[i],1);  
 215   1      }  
 216          //write a Chinese sentence(16*16),auto line breaks,x is between 0 and 58  
 217          void lcdWriteChineseStr(uchar Hanzi[],uchar x,uchar y,uchar num)  
 218          {  
 219   1          uchar num_i,i = 0;  
 220   1          for(num_i = 0;num_i < num;num_i ++)  
 221   1          {  
 222   2              //if need line breaks  
 223   2              if(x + (16 * num_i) > 58)  
 224   2              {  
 225   3                  x = 0;  
 226   3                  i = 0;  
 227   3                  y += 1;  
 228   3              }  
 229   2              //write a Chinese character(16*16)  
 230   2              lcdWriteChinese(Hanzi + 32 * num_i,x + (16 * i),y);  
 231   2              i ++;  
 232   2          }  
 233   1      }  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1390    ----
   CONSTANT SIZE    =   1330    ----
   XDATA SIZE       =     20      63
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.55   NOKIA5110                                                             05/27/2016 11:35:25 PAGE 5   

   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
